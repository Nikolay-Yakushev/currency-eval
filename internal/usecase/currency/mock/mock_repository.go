// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/repository/repository.go -destination=internal/usecase/currency/mock/mock_repository.go -package=mock
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	models "currency_eval/internal/models"
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockCurrencyRepository is a mock of CurrencyRepository interface.
type MockCurrencyRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyRepositoryMockRecorder
	isgomock struct{}
}

// MockCurrencyRepositoryMockRecorder is the mock recorder for MockCurrencyRepository.
type MockCurrencyRepositoryMockRecorder struct {
	mock *MockCurrencyRepository
}

// NewMockCurrencyRepository creates a new mock instance.
func NewMockCurrencyRepository(ctrl *gomock.Controller) *MockCurrencyRepository {
	mock := &MockCurrencyRepository{ctrl: ctrl}
	mock.recorder = &MockCurrencyRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyRepository) EXPECT() *MockCurrencyRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCurrencyRepository) Get(ctx context.Context, date time.Time) ([]models.Currency, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, date)
	ret0, _ := ret[0].([]models.Currency)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCurrencyRepositoryMockRecorder) Get(ctx, date any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCurrencyRepository)(nil).Get), ctx, date)
}

// Update mocks base method.
func (m *MockCurrencyRepository) Update(ctx context.Context, rates []models.Currency) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, rates)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update.
func (mr *MockCurrencyRepositoryMockRecorder) Update(ctx, rates any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockCurrencyRepository)(nil).Update), ctx, rates)
}
